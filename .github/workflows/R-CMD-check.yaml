on:
  push

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - name: Install R deployment packages
        run: |
          install.packages('rcmdcheck')
          install.packages('testthat')
          install.packages('pak')
        shell: Rscript {0}
        working-directory: Server

      - name: Cache R production packages
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pak-${{ hashFiles('**/prod.lock') }}
          restore-keys: |
            ${{ runner.os }}-pak-

      - name: Install R production packages
        run: |
          pak::lockfile_install('./prod.lock')
        shell: Rscript {0}
        working-directory: Server

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          _R_CHECK_FORCE_SUGGESTS_: false
          _R_CHECK_LICENSE_: false
          _R_CHECK_CODETOOLS_PROFILE_: 'suppressUndefined=TRUE'
        run: |
          rcmdcheck::rcmdcheck(args = c('--no-manual'), error_on = 'warning', check_dir = 'check')
          testthat::test_package('hivPlatform')
        shell: Rscript {0}
        working-directory: Server

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
